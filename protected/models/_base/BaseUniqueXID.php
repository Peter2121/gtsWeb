<?php

/**
 * This is the model base class for the table "UniqueXID".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UniqueXID".
 *
 * Columns in table "UniqueXID" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $uniqueID
 * @property string $accountID
 * @property string $transportID
 *
 */
abstract class BaseUniqueXID extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'UniqueXID';
    }

    public static function representingColumn() {
        return 'uniqueID';
    }

    public function rules() {
        return array(
            array('uniqueID', 'required'),
            array('uniqueID', 'length', 'max'=>40),
            array('accountID, transportID', 'length', 'max'=>32),
            array('accountID, transportID', 'default', 'setOnEmpty' => true, 'value' => null),
            array('uniqueID, accountID, transportID', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'uniqueID' => Yii::t('app', 'Unique'),
                'accountID' => Yii::t('app', 'Account'),
                'transportID' => Yii::t('app', 'Transport'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('uniqueID', $this->uniqueID, true);
        $criteria->compare('accountID', $this->accountID, true);
        $criteria->compare('transportID', $this->transportID, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}